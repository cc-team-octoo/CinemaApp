{"version":3,"sources":["apis/MovieDatabase.js","components/ScreeningTimeButton.js","components/Film.js","actions/index.js","components/FilmsNowInTheatres.js","components/Styled.js","components/Seat.js","components/Row.js","components/Room.js","components/ReservationForm.js","components/Modal.js","components/SeanceRoom.js","components/App.js","reducers/currentFilms.js","reducers/bookedFilm.js","reducers/bookingTime.js","reducers/takenSeats.js","reducers/bookedFilmTitle.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","process","ScreeningTimeButton","props","to","filmId","time","split","join","onClick","handleClick","mapDispatchToProps","setFilmToBook","type","payload","setTimeOfBooking","setFilmTitleToBook","filmTitle","Film","screeningTimeList","bind","e","this","film","id","target","innerText","title","src","poster_path","alt","map","screening","i","key","overview","React","Component","connect","FilmsNowInTheatres","fetchCurrentFilms","currentFilms","Fragment","state","dispatch","createMovieBase","a","async","data","generatedResponse","Promise","all","elem","createMovie","insertResponse","push","console","log","MovieDatabase","get","response","results","movie","fetch","headers","method","body","JSON","stringify","name","hoursArray","catch","error","StyledScreen","styled","div","StyledSeat","disabled","checked","CheckboxContainer","label","HiddenCheckbox","input","attrs","StyledRow","rowName","StyledRoom","StyledFormContainer","StyledForm","form","StyledInfo","p","StyledInput","StyledError","StyledButton","button","ModalBckg","StyledModal","StyledTitle","addTakenSeat","seatId","removeTakenSeat","Seat","handleCheckboxChange","event","setState","taken","indexOf","onChange","Row","row","Room","room","rows","renderField","meta","touched","placeholder","autoComplete","ReservationForm","handleSubmit","pristine","submitting","onSubmit","onFormSubmit","Field","component","reduxForm","validate","formValues","username","email","errors","length","test","resetTakenSeats","Modal","ReactDOM","createPortal","seats","document","querySelector","SeanceRoom","takenSeats","alert","showModal","hour","seatsToReserve","updateMovie","then","json","res","hours","reservedSeats","err","fetchMovie","result","bookedTitle","bookingTime","App","useSelector","path","exact","currentFilmsReducer","action","bookedFilmReducer","bookingTimeReducer","takenSeatsReducer","filter","el","bookedFilmTitleReducer","combineReducers","formReducer","bookedFilm","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","render","getElementById"],"mappings":"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","file":"static/js/main.5be851cf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_THE_MOVIE_DB_API_KEY}&language=en-US&page=1`\r\n});","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ScreeningTimeButton = (props) => {\r\n    const to = `/seats/${props.filmId}/${props.time.split(' ').join('')}`\r\n    \r\n    return (\r\n        <Link to={to}>\r\n            <button onClick={props.handleClick}>{props.time}</button>\r\n        </Link>\r\n    )\r\n};\r\n\r\nexport default ScreeningTimeButton;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ScreeningTimeButton from './ScreeningTimeButton';\r\nimport { setFilmToBook, setTimeOfBooking, setFilmTitleToBook } from '../actions'\r\n\r\nconst mapDispatchToProps = {\r\n    setFilmToBook,\r\n    setTimeOfBooking,\r\n    setFilmTitleToBook\r\n}\r\n\r\nclass Film extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    screeningTimeList = ['4:00 PM', '6:30 PM', '9:00 PM'];\r\n\r\n    handleClick(e) {\r\n        this.props.setFilmToBook(this.props.film.id);\r\n        this.props.setTimeOfBooking(e.target.innerText);\r\n        this.props.setFilmTitleToBook(this.props.film.title);\r\n    }\r\n\r\n    render() {\r\n        const {film} = this.props;\r\n        const src = `https://image.tmdb.org/t/p/w300/${film.poster_path}`\r\n        return (\r\n            <li>\r\n                <span><img src={src} alt=\"\" /></span>\r\n                <span>{film.title}</span>\r\n                <span>Book a ticket:\r\n                  <span>\r\n                    {\r\n                        this.screeningTimeList.map((screening, i) => (\r\n                            <ScreeningTimeButton key={i} time={screening} filmId={film.id} handleClick={this.handleClick}/>\r\n                        ))\r\n                    }\r\n                  </span>\r\n                </span>\r\n                <span>{film.overview}</span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Film);\r\n","import MovieDatabase from '../apis/MovieDatabase';\r\n\r\nexport const fetchCurrentFilms = () => async dispatch => {\r\n    const response = await MovieDatabase.get();\r\n    console.log(await response.data.results);\r\n\r\n//     dispatch({ type: 'FETCH_CURRENT_FILMS_SUCCESS', payload: response.data.results});\r\n// };\r\n\r\n    const createMovie = function (movie) {\r\n        fetch(\"http://localhost:8000/api/movies\", {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                name: movie.title,\r\n                overview: movie.overview,\r\n                hoursArray: [4, 6.5, 9]\r\n            })\r\n        }).catch(error => {                  // 3\r\n            console.log(error)\r\n       });\r\n    }\r\n    async function createMovieBase(data) {\r\n        let generatedResponse = []\r\n        await Promise.all(data.map(async (elem) => {\r\n            try {\r\n                let insertResponse = await createMovie(elem)\r\n                generatedResponse.push(insertResponse)\r\n            } catch (error) {\r\n                console.log('error' + error);\r\n            }\r\n        }))\r\n    }\r\n    createMovieBase(response.data.results)\r\n    dispatch({\r\n        type: 'FETCH_CURRENT_FILMS_SUCCESS',\r\n        payload: response.data.results\r\n    });\r\n};\r\n\r\nexport const setFilmToBook = filmId => (\r\n    {\r\n        type: 'FILM_TO_BOOK_CHOSEN',\r\n        payload: filmId\r\n    }\r\n);\r\n\r\nexport const setFilmTitleToBook = filmTitle => (\r\n    {\r\n        type: 'FILM_TITLE_CHOSEN',\r\n        payload: filmTitle\r\n    }\r\n);\r\n\r\nexport const setTimeOfBooking = time => (\r\n    {\r\n        type: 'TIME_OF_BOOKING_CHOSEN',\r\n        payload: time\r\n    }\r\n);\r\n\r\nexport const addTakenSeat = seatId => (\r\n    {\r\n        type: 'ADD_TAKEN_SEAT',\r\n        payload: seatId\r\n    }\r\n);\r\n\r\nexport const removeTakenSeat = seatId => (\r\n    {\r\n        type: 'REMOVE_TAKEN_SEAT',\r\n        payload: seatId\r\n    }\r\n);\r\n\r\nexport const resetTakenSeats = () => (\r\n    {\r\n        type: 'RESET_TAKEN_SEATS'\r\n    }\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCurrentFilms } from '../actions';\r\nimport Film from './Film';\r\n\r\nconst select = state => {\r\n    return {\r\n        currentFilms: state.currentFilms\r\n    }\r\n}\r\n\r\nclass FilmsNowInTheatres extends Component {\r\n    componentDidMount() {\r\n     this.props.fetchCurrentFilms();\r\n    }\r\n\r\n    render() {\r\n        const currentFilms = this.props.currentFilms;\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Movie List</h1>\r\n                <ol>\r\n                    { currentFilms.map(film => (\r\n                        <Film key={film.id} film={film} />\r\n                    )) }\r\n                </ol>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(select, { fetchCurrentFilms })(FilmsNowInTheatres);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledScreen = styled.div`\r\n  text-align: center;\r\n  color: #fafafa;\r\n  background-color: #000;\r\n  width: 280px;\r\n  border-radius: 5px;\r\n  font-size: 0.8rem;\r\n  padding: 2px;\r\n  margin: auto;\r\n\r\n  @media (min-width: 400px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\nexport const StyledSeat = styled.div`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 5px;\r\n  background-color: ${props => props.disabled ? 'rgba(47, 72, 88, .6)' : props.checked ? 'black' : 'green'};\r\n  margin: 3px 2px;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  color: ${props => props.disabled ? 'transparent' : props.checked ? '#fafafa' : 'transparent'};\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  user-select: none;\r\n  transition: background-color 0.1s;\r\n\r\n  &:hover {\r\n      color: ${props => props.disabled ? 'transparent' : '#fafafa'};\r\n      background-color: ${props => props.disabled ? 'rgba(47, 72, 88, .6)' : 'purple'};\r\n  }\r\n\r\n  @media (min-width: 400px) {\r\n    height: 30px;\r\n    width: 30px;\r\n    line-height: 30px;\r\n  }\r\n`;\r\n\r\nexport const CheckboxContainer = styled.label`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  // Hide checkbox visually but remain accessible to screen readers.\r\n  // Source: https://polished.js.org/docs/#hidevisually\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nexport const StyledRow = styled.div`\r\n  &::before, &::after  {\r\n    content: '${props => props.rowName}';\r\n    margin: 2px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const StyledRoom = styled.div`\r\n  text-align: center;\r\n  margin: 15px;\r\n`;\r\n\r\nexport const StyledFormContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  max-width: 500px;\r\n  margin: auto;\r\n  padding: 1rem 1.5rem;\r\n  text-align: center;\r\n  border: 2px solid #2f4858;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const StyledInfo = styled.p`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  padding: 8px;\r\n  margin: 5px;\r\n  min-width: 240px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 2px 4px 8px #87898a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #87898a;\r\n  }\r\n`;\r\n\r\nexport const StyledError = styled.p`\r\n  font-size: 0.8rem;\r\n  color: #d8000c;\r\n  background-color: #ffbaba;\r\n  text-align: center;\r\n  padding: 2px;\r\n  margin: 2px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  font-size: 1.2rem;\r\n  color: #fafafa;\r\n  padding: 0.5rem 1.2rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #2f4858;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n\r\n  &:disabled,\r\n  &:disabled&:hover {\r\n    background-color: rgba(47, 72, 88, 0.6);\r\n    box-shadow: none;\r\n    cursor: default;\r\n  }\r\n\r\n  &:focus,\r\n  &:active,\r\n  &:hover {\r\n    outline: none;\r\n    background-color: #005263;\r\n    box-shadow: 2px 4px 8px #87898a;\r\n  }\r\n`;\r\n\r\n// MODAL\r\nexport const ModalBckg = styled.div`\r\n  background-color: rgba(47, 72, 88, .7);\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledModal = styled.div`\r\n  background-color: #fafafa;\r\n  height: fit-content;\r\n  border: 2px solid #2F4858;\r\n  border-radius: 5px; \r\n  padding: 1.5rem;\r\n  margin-top: 20vh;\r\n  text-align: center;\r\n`;\r\n\r\nexport const StyledTitle = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: 400;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTakenSeat, removeTakenSeat } from '../actions';\r\nimport { StyledSeat, CheckboxContainer, HiddenCheckbox } from './Styled';\r\n\r\nconst mapDispatchToProps = { addTakenSeat, removeTakenSeat }\r\n\r\nclass Seat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { checked: false };\r\n        this.handleCheckboxChange.bind(this);\r\n    }  \r\n\r\n    handleCheckboxChange = async event => {\r\n        await this.setState({ checked: event.target.checked });\r\n        const seatId = `${this.props.id}${this.props.rowName}`; \r\n        this.state.checked ? this.props.addTakenSeat(seatId) : this.props.removeTakenSeat(seatId);\r\n    }   \r\n       \r\n    render() {\r\n        const seatId = `${this.props.id}${this.props.rowName}`;\r\n        const taken = this.props.taken.indexOf(seatId) > -1;\r\n\r\n        return (\r\n            <CheckboxContainer\r\n                checked={taken || this.state.checked}>\r\n                    <HiddenCheckbox \r\n                        checked={taken || this.state.checked}\r\n                        onChange={this.handleCheckboxChange}\r\n                        disabled={taken}/>\r\n                    <StyledSeat checked={taken || this.state.checked} disabled={taken}>\r\n                        {this.props.id}\r\n                    </StyledSeat>\r\n            </CheckboxContainer>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Seat);\r\n","import React from 'react';\r\nimport Seat from './Seat';\r\nimport { StyledRow } from './Styled'\r\n\r\nconst Row = (props) => {\r\n    let row = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        row.push(\r\n            <Seat \r\n                id={i+1} \r\n                key={`seat${i+1}`}\r\n                rowName={props.rowName}\r\n                taken={props.taken}>\r\n            </Seat>);\r\n    }\r\nreturn <StyledRow rowName={props.rowName}>{row}</StyledRow>\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from './Row';\r\nimport { StyledRoom } from './Styled';\r\n\r\nconst Room = (props) => {\r\n    let room = [];\r\n    let rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\r\n    for (let i = 0; i < 8; i++) {\r\n        room.push(<Row \r\n            key={`row${i}`}\r\n            rowName={rows[i]}\r\n            taken={props.taken}/>)\r\n    };\r\n    return (\r\n        <StyledRoom>{room}</StyledRoom>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { StyledForm, StyledFormContainer, StyledInput, StyledError, StyledButton, StyledInfo } from './Styled'\r\n\r\nconst validate = formValues => {\r\n    const { username, email } = formValues;\r\n    const errors = {};\r\n    if (!username) {\r\n        errors.username = 'Your name is required'\r\n    } else if (username.length > 15) {\r\n        errors.username = 'The name can have max 15 characters'\r\n    }\r\n    if (!email) {\r\n        errors.email = 'Your email is required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst renderField = ({\r\n    input,\r\n    type,\r\n    label,\r\n    meta: { touched, error }\r\n    }) => (\r\n    <div>\r\n        <StyledInput {...input} placeholder={label} type={type} autoComplete='off' />\r\n        {touched && error && <StyledError>{error}</StyledError>}\r\n    </div>\r\n)\r\n\r\nclass ReservationForm extends Component {\r\n    render() {\r\n        const { handleSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <StyledFormContainer>\r\n                <h2>Reservation form</h2>\r\n                <StyledInfo>To make a reservation, please enter your name and email address so we can send you a confirmation message with all the further details</StyledInfo>\r\n                <StyledForm onSubmit={handleSubmit(this.props.onFormSubmit)}>\r\n                    <Field\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                        label=\"username\"\r\n                    />\r\n                    <Field \r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        component={renderField} \r\n                        label=\"email\" />\r\n                    <StyledButton type=\"submit\" disabled={pristine || submitting}>\r\n                        Submit\r\n                    </StyledButton>\r\n                </StyledForm>\r\n            </StyledFormContainer>\r\n        )\r\n    }\r\n}\r\n\r\nReservationForm = reduxForm ({\r\n    form: 'reservationForm',\r\n    validate\r\n})(ReservationForm);\r\n\r\nexport default ReservationForm;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { resetTakenSeats } from '../actions';\r\nimport { ModalBckg, StyledModal, StyledButton, StyledInfo, StyledTitle } from './Styled';\r\n\r\nconst mapDispatchToProps = { resetTakenSeats }\r\n\r\nclass Modal extends Component {\r\n\r\n    handleClick = () => {\r\n        this.props.resetTakenSeats();\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <ModalBckg>\r\n                <StyledModal>\r\n                    <h2>The confirmation email was sent</h2>\r\n                    <StyledInfo>You reserved {this.props.seats} seats for the movie:</StyledInfo>\r\n                    <StyledTitle>\"{this.props.film}\"</StyledTitle>\r\n                    <StyledInfo>The screening will take place at {this.props.time}</StyledInfo>\r\n                    <Link to='/'>\r\n                        <StyledButton onClick={this.handleClick}>OK</StyledButton>\r\n                    </Link>\r\n                </StyledModal>\r\n            </ModalBckg>, \r\n            document.querySelector('#modal')\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Modal);","import React, { Component } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { StyledScreen } from './Styled';\r\nimport Room from './Room';\r\nimport ReservationFrom from './ReservationForm';\r\nimport Modal from './Modal';\r\n\r\nclass SeanceRoom extends Component {\r\n    // const {id} = useParams();\r\n    // console.log(id);\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taken: ['1A', '7C'],\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const fetchMovie = (name = \"Ad Astra\", time = \"6:30PM\") => {\r\n            let hourArray=0\r\n            if (time === \"4:00PM\") {\r\n                hourArray = 0;\r\n            }\r\n            else if (time === \"6:30PM\") {\r\n                hourArray = 1;\r\n            }\r\n            else if (time === \"9:00PM\") {\r\n                hourArray=2\r\n            }\r\n          return fetch(`http://localhost:8000/api/movies/${name}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"GET\",\r\n          }).then((response) => { return response.json() })\r\n              .then((res) => { return res[0].hours[0].reservedSeats})\r\n              .catch((err) => console.log(err))\r\n        }\r\n        fetchMovie(\"Ad Astra\",0).then((result)=> {\r\n            this.setState({taken :result})\r\n     })\r\n       }\r\n   \r\n       onFormSubmit = formValues => {\r\n        const {username, email} = formValues;\r\n        console.log(`You made a reservation of seats: . Username: ${username} email address: ${email}`);\r\n        if (this.props.takenSeats.length === 0) {\r\n            alert('You need to choose at least one seat')\r\n        } else if (this.props.takenSeats.length > 10) {\r\n            alert('You can choose maximum 10 seats on one reservation')\r\n        } else {\r\n            this.setState({ showModal: true })\r\n            const updateMovie = function (name=\"Ad Astra\",hour=4,takenSeats) {\r\n                fetch(`http://localhost:8000/api/movies/${name}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify({\r\n                        seatsToReserve:takenSeats,\r\n                        hour:hour\r\n                    })\r\n                })\r\n            }\r\n            updateMovie(\"Ad Astra\",4,this.props.takenSeats)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showModal && \r\n                    <Modal \r\n                        film={this.props.bookedTitle}\r\n                        seats={this.props.takenSeats.length}\r\n                        time={this.props.bookingTime}\r\n                    />\r\n                }\r\n                <h1>Choose your seats for the movie</h1>\r\n                <StyledScreen>screen</StyledScreen>\r\n                <Room taken={this.state.taken}/>\r\n                <ReservationFrom onFormSubmit={this.onFormSubmit} />\r\n            </div>\r\n        ) \r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        takenSeats: state.takenSeats.takenSeats,\r\n        bookingTime: state.bookingTime,\r\n        bookedTitle: state.bookedTitle\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SeanceRoom);\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch} from 'react-router-dom';\r\nimport FilmsNowInTheatres from './FilmsNowInTheatres';\r\nimport Film from './Film';\r\nimport SeanceRoom from './SeanceRoom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst App = () => {\r\n    const currentFilms = useSelector(state => state.currentFilms);\r\n\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={FilmsNowInTheatres} />\r\n                        <Route path=\"/film\" exact component={Film} />\r\n                        {/* <Route path=\"/seats\" exact component={SeanceRoom} /> */}\r\n                        {/* <Route path=\"/seats/:id\" exact component={SeanceRoom} /> */}\r\n                        {currentFilms.map((film, i) => {\r\n                            let path = `/seats/${film.id}/:hour`;\r\n                            return <Route key={i} path={path} exact component={SeanceRoom} />\r\n                        })}\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const currentFilmsReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_CURRENT_FILMS_SUCCESS':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentFilmsReducer\r\n","const bookedFilmReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'FILM_TO_BOOK_CHOSEN':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bookedFilmReducer;\r\n","const bookingTimeReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'TIME_OF_BOOKING_CHOSEN':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bookingTimeReducer;\r\n","const takenSeatsReducer = (state = {takenSeats: []}, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TAKEN_SEAT':\r\n            return {\r\n                takenSeats: [...state.takenSeats, action.payload]\r\n            }\r\n        case 'REMOVE_TAKEN_SEAT':\r\n            const takenSeats = state.takenSeats.filter(el => el !== action.payload)\r\n            return {\r\n                takenSeats\r\n            }\r\n        case 'RESET_TAKEN_SEATS':\r\n            return {\r\n                ...state,\r\n                takenSeats: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default takenSeatsReducer;\r\n","const bookedFilmTitleReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'FILM_TITLE_CHOSEN':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bookedFilmTitleReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport currentFilmsReducer from './currentFilms';\r\nimport bookedFilm from './bookedFilm';\r\nimport bookingTime from './bookingTime';\r\nimport takenSeats from './takenSeats';\r\nimport bookedTitle from './bookedFilmTitle'\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    currentFilms: currentFilmsReducer,\r\n    bookedFilm,\r\n    bookingTime,\r\n    takenSeats,\r\n    bookedTitle\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';  \r\nimport { createStore, applyMiddleware, compose } from 'redux'; \r\nimport thunk from 'redux-thunk'; \r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport './index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}