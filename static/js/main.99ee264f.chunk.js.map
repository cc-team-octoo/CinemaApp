{"version":3,"sources":["apis/MovieDatabase.js","components/Film.js","components/FilmsNowInTheatres.js","actions/index.js","components/Styled.js","components/Seat.js","components/Row.js","components/SeanceRoom.js","components/App.js","reducers/currentFilms.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","Film","film","this","props","src","poster_path","alt","title","overview","React","Component","FilmsNowInTheatres","fetchCurrentFilms","currentFilms","Fragment","map","key","id","connect","state","dispatch","a","async","MovieDatabase","get","response","console","data","log","type","payload","results","StyledSeat","styled","div","checked","CheckboxContainer","label","HiddenCheckbox","input","attrs","StyledRow","rowName","StyledRoom","Seat","handleCheckboxChange","event","setState","target","bind","onChange","Row","row","i","push","SeanceRoom","room","rows","App","path","exact","component","currentFilmsReducer","action","combineReducers","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99ee264f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: `https://api.themoviedb.org/3/movie/now_playing?api_key=c2a3bc12e5a28aefbab1bbb6777a765b&language=en-US&page=1`\r\n});\r\n","import React from 'react';\r\n\r\nclass Film extends React.Component {\r\n\r\n    render() {\r\n        const film = this.props.film;\r\n        const src = `https://image.tmdb.org/t/p/w300/${film.poster_path}`\r\n        return (\r\n            <li>\r\n                <span><img src={src} alt=\"\" /></span>\r\n                <span>{film.title}</span>\r\n                <span>{film.overview}</span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Film;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCurrentFilms } from '../actions';\r\nimport Film from './Film';\r\n\r\nconst select = state => {\r\n    return {\r\n        currentFilms: state.currentFilms\r\n    }\r\n}\r\n\r\nclass FilmsNowInTheatres extends Component {\r\n    componentDidMount() {\r\n     this.props.fetchCurrentFilms();\r\n    }\r\n\r\n    render() {\r\n        const currentFilms = this.props.currentFilms;\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Movie List</h1>\r\n                <ol>\r\n                    { currentFilms.map(film => (\r\n                        <Film key={film.id} film={film} />\r\n                    )) }\r\n                </ol>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(select, { fetchCurrentFilms })(FilmsNowInTheatres);\r\n","import MovieDatabase from '../apis/MovieDatabase';\r\n\r\nexport const fetchCurrentFilms = () => async dispatch => {\r\n    const response = await MovieDatabase.get();\r\n    console.log(await response.data);\r\n\r\n    dispatch({ type: 'FETCH_CURRENT_FILMS_SUCCESS', payload: response.data.results});\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSeat = styled.div`\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 5px;\r\n    background-color: ${props => props.checked ? 'black' : 'green'};\r\n    margin: 3px 2px;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    color: ${props => props.checked ? '#fafafa' : 'green'};\r\n    font-size: 12px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    user-select: none;\r\n    transition: background-color .1s;\r\n\r\n    &:hover {\r\n        color: #fafafa;\r\n        background-color: purple;\r\n    }\r\n`;\r\n\r\nexport const CheckboxContainer = styled.label`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  // Hide checkbox visually but remain accessible to screen readers.\r\n  // Source: https://polished.js.org/docs/#hidevisually\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nexport const StyledRow = styled.div`\r\n  &::before, &::after  {\r\n    content: '${props => props.rowName}';\r\n    margin: 2px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const StyledRoom = styled.div`\r\n  font-family: Roboto, sans-serif;\r\n  text-align: center;\r\n  margin: 15px;\r\n`;","import React, { Component } from 'react';\r\nimport { StyledSeat, CheckboxContainer, HiddenCheckbox } from './Styled';\r\n\r\nclass Seat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { checked: false };\r\n        this.handleCheckboxChange.bind(this);\r\n    }  \r\n\r\n    handleCheckboxChange = async event => {\r\n        await this.setState({ checked: event.target.checked });\r\n        this.state.checked ? \r\n            console.log(`Seat number ${this.props.id}${this.props.rowName} is checked`) : \r\n            console.log(`Seat number ${this.props.id}${this.props.rowName} was unchecked`)\r\n    }        \r\n    \r\n    render() {\r\n        return (\r\n            <CheckboxContainer\r\n                checked={this.state.checked}>\r\n                    <HiddenCheckbox \r\n                        checked={this.state.checked}\r\n                        onChange={this.handleCheckboxChange}/>\r\n                    <StyledSeat checked={this.state.checked}>{this.props.id}</StyledSeat>\r\n            </CheckboxContainer>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Seat;","import React from 'react';\r\nimport Seat from './Seat';\r\nimport { StyledRow } from './Styled'\r\n\r\nconst Row = (props) => {\r\n    let row = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        row.push(\r\n            <Seat \r\n                id={i+1} \r\n                key={i+1}\r\n                rowName={props.rowName}>\r\n            </Seat>);\r\n    }\r\nreturn <StyledRow rowName={props.rowName}>{row}</StyledRow>\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from './Row';\r\nimport { StyledRoom } from './Styled';\r\n\r\nconst SeanceRoom = () => {\r\n    let room = [];\r\n    let rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\r\n    for (let i = 0; i < 8; i++) {\r\n        room.push(<Row rowName={rows[i]}/>)\r\n    };\r\n\r\n    return <StyledRoom>{room}</StyledRoom>\r\n};\r\n\r\nexport default SeanceRoom;","import React from 'react';\r\nimport { HashRouter, Route} from 'react-router-dom';\r\nimport FilmsNowInTheatres from './FilmsNowInTheatres';\r\nimport Film from './Film';\r\nimport SeanceRoom from './SeanceRoom';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <div>\r\n                    <Route path=\"/\" exact component={FilmsNowInTheatres} />\r\n                    <Route path=\"/film\" exact component={Film} />\r\n                    <Route path=\"/seats\" exact component={SeanceRoom} />\r\n                </div>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const currentFilmsReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_CURRENT_FILMS_SUCCESS':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentFilmsReducer\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport currentFilmsReducer from './currentFilms';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    currentFilms: currentFilmsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';  \r\nimport { createStore, applyMiddleware, compose } from 'redux'; \r\nimport thunk from 'redux-thunk'; \r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport './index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}