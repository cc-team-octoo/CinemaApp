{"version":3,"sources":["apis/MovieDatabase.js","components/ScreeningTimeButton.js","components/Film.js","actions/index.js","components/FilmsNowInTheatres.js","components/Styled.js","components/Seat.js","components/Row.js","components/Room.js","components/ReservationForm.js","components/SeanceRoom.js","components/App.js","reducers/currentFilms.js","reducers/bookedFilm.js","reducers/bookingTime.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","ScreeningTimeButton","props","to","filmId","time","split","join","onClick","handleClick","mapDispatchToProps","setFilmToBook","type","payload","setTimeOfBooking","Film","screeningTimeList","bind","e","this","film","id","target","innerText","src","poster_path","alt","title","overview","map","screening","i","key","React","Component","connect","FilmsNowInTheatres","fetchCurrentFilms","currentFilms","Fragment","state","dispatch","createMovieBase","a","async","data","generatedResponse","Promise","all","elem","createMovie","insertResponse","push","console","log","MovieDatabase","get","response","results","movie","fetch","headers","method","body","JSON","stringify","name","hoursArray","StyledScreen","styled","div","StyledSeat","checked","CheckboxContainer","label","HiddenCheckbox","input","attrs","StyledRow","rowName","StyledRoom","StyledFormContainer","StyledForm","form","StyledResInfo","p","StyledInput","StyledError","StyledButton","button","Seat","handleCheckboxChange","event","setState","taken","onChange","Row","row","Room","room","rows","renderField","meta","touched","error","placeholder","autoComplete","reduxForm","validate","formValues","username","email","errors","length","test","handleSubmit","pristine","submitting","onSubmit","Field","component","disabled","SeanceRoom","App","useSelector","path","exact","currentFilmsReducer","action","bookedFilmReducer","bookingTimeReducer","combineReducers","formReducer","bookedFilm","bookingTime","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f94c757e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: `magic Link`\r\n});","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ScreeningTimeButton = (props) => {\r\n    const to = `/seats/${props.filmId}/${props.time.split(' ').join('')}`\r\n    \r\n    return (\r\n        <Link to={to}>\r\n            <button onClick={props.handleClick}>{props.time}</button>\r\n        </Link>\r\n    )\r\n};\r\n\r\nexport default ScreeningTimeButton;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ScreeningTimeButton from './ScreeningTimeButton';\r\nimport { setFilmToBook, setTimeOfBooking } from '../actions'\r\n\r\nconst mapDispatchToProps = {\r\n    setFilmToBook,\r\n    setTimeOfBooking\r\n}\r\n\r\nclass Film extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    screeningTimeList = ['4:00 PM', '6:30 PM', '9:00 PM'];\r\n\r\n    handleClick(e) {\r\n        this.props.setFilmToBook(this.props.film.id);\r\n        this.props.setTimeOfBooking(e.target.innerText);\r\n    }\r\n\r\n    render() {\r\n        const {film} = this.props;\r\n        const src = `https://image.tmdb.org/t/p/w300/${film.poster_path}`\r\n        return (\r\n            <li>\r\n                <span><img src={src} alt=\"\" /></span>\r\n                <span>{film.title}</span>\r\n                <span>{film.overview}</span>\r\n                <span>Book a ticket:\r\n                    {\r\n                        this.screeningTimeList.map((screening, i) => (\r\n                            <ScreeningTimeButton key={i} time={screening} filmId={film.id} handleClick={this.handleClick}/>\r\n                        ))\r\n                    }\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Film);\r\n","import MovieDatabase from '../apis/MovieDatabase';\r\n\r\nexport const fetchCurrentFilms = () => async dispatch => {\r\n    const response = await MovieDatabase.get();\r\n    console.log(await response.data.results);\r\n\r\n    const createMovie = function (movie) {\r\n        fetch(\"http://localhost:8000/api/movies\", {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                name: movie.title,\r\n                overview: movie.overview,\r\n                hoursArray: [4, 6.5, 9]\r\n            })\r\n        })\r\n    }\r\n    async function createMovieBase(data) {\r\n        let generatedResponse = []\r\n        await Promise.all(data.map(async (elem) => {\r\n            try {\r\n                let insertResponse = await createMovie(elem)\r\n                generatedResponse.push(insertResponse)\r\n            } catch (error) {\r\n                console.log('error' + error);\r\n            }\r\n        }))\r\n    }\r\n    createMovieBase(response.data.results)\r\n    dispatch({\r\n        type: 'FETCH_CURRENT_FILMS_SUCCESS',\r\n        payload: response.data.results\r\n    });\r\n}\r\n\r\nexport const setFilmToBook = (filmId) => (\r\n    {\r\n        type: 'FILM_TO_BOOK_CHOSEN',\r\n        payload: filmId\r\n    }\r\n);\r\n\r\nexport const setTimeOfBooking = (time) => (\r\n    {\r\n        type: 'TIME_OF_BOOKING_CHOSEN',\r\n        payload: time\r\n    }\r\n);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCurrentFilms } from '../actions';\r\nimport Film from './Film';\r\n\r\nconst select = state => {\r\n    return {\r\n        currentFilms: state.currentFilms\r\n    }\r\n}\r\n\r\nclass FilmsNowInTheatres extends Component {\r\n    componentDidMount() {\r\n     this.props.fetchCurrentFilms();\r\n    }\r\n\r\n    render() {\r\n        const currentFilms = this.props.currentFilms;\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Movie List</h1>\r\n                <ol>\r\n                    { currentFilms.map(film => (\r\n                        <Film key={film.id} film={film} />\r\n                    )) }\r\n                </ol>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(select, { fetchCurrentFilms })(FilmsNowInTheatres);\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledScreen = styled.div`\r\n  text-align: center;\r\n  color: #fafafa;\r\n  background-color: #000;\r\n  width: 280px;\r\n  border-radius: 5px;\r\n  font-size: .8rem;\r\n  padding: 2px;\r\n  margin: auto;\r\n\r\n  @media (min-width: 400px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\nexport const StyledSeat = styled.div`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 5px;\r\n  background-color: ${props => props.checked ? 'black' : 'green'};\r\n  margin: 3px 2px;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  color: ${props => props.checked ? '#fafafa' : 'green'};\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  user-select: none;\r\n  transition: background-color .1s;\r\n\r\n  &:hover {\r\n      color: #fafafa;\r\n      background-color: purple;\r\n  }\r\n\r\n  @media (min-width: 400px) {\r\n    height: 30px;\r\n    width: 30px;\r\n    line-height: 30px;\r\n  }\r\n`;\r\n\r\nexport const CheckboxContainer = styled.label`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  // Hide checkbox visually but remain accessible to screen readers.\r\n  // Source: https://polished.js.org/docs/#hidevisually\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nexport const StyledRow = styled.div`\r\n  &::before, &::after  {\r\n    content: '${props => props.rowName}';\r\n    margin: 2px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const StyledRoom = styled.div`\r\n  text-align: center;\r\n  margin: 15px;\r\n`;\r\n\r\nexport const StyledFormContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  max-width: 500px;\r\n  margin: auto;\r\n  padding: 1rem 1.5rem;\r\n  text-align: center;\r\n  border: 2px solid #2F4858;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const StyledResInfo = styled.p`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  padding: 8px;\r\n  margin: 5px;\r\n  min-width: 240px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 2px 4px 8px #87898a;\r\n  };\r\n\r\n  &::placeholder {\r\n    color: #87898a;\r\n  }\r\n`;\r\n\r\nexport const StyledError = styled.p`\r\n  font-size: .8rem;\r\n  color: #D8000C;\r\n  background-color: #FFBABA;\r\n  text-align: center;\r\n  padding: 2px;\r\n  margin: 2px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  font-size: 1.2rem;\r\n  color: #fafafa;\r\n  padding: .5rem 1.2rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #2F4858;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n\r\n  &:disabled, &:disabled&:hover {\r\n    background-color: rgba(47, 72, 88, .6);\r\n    box-shadow: none;\r\n    cursor: default;\r\n  }\r\n\r\n  &:focus, &:active, &:hover {\r\n    outline: none;\r\n    background-color: #005263;\r\n    box-shadow: 2px 4px 8px #87898a;\r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport { StyledSeat, CheckboxContainer, HiddenCheckbox } from './Styled';\r\n\r\nclass Seat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { checked: false };\r\n        this.handleCheckboxChange.bind(this);\r\n        // this.checkTaken.bind(this);\r\n    }  \r\n\r\n    handleCheckboxChange = async event => {\r\n        await this.setState({ checked: event.target.checked });\r\n        this.state.checked ? \r\n            console.log(`Seat number ${this.props.id}${this.props.rowName} is checked`) : \r\n            console.log(`Seat number ${this.props.id}${this.props.rowName} was unchecked`);\r\n        console.log(this.props.taken)\r\n    }   \r\n    \r\n    // checkTaken = () => {\r\n    //     const seatId = `${this.props.id}${this.props.rowName}`;\r\n    //     this.props.indexOf(seatId) > -1 ? true : false;\r\n    // }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <CheckboxContainer\r\n                checked={this.state.checked}>\r\n                    <HiddenCheckbox \r\n                        checked={this.state.checked}\r\n                        onChange={this.handleCheckboxChange}/>\r\n                    <StyledSeat checked={this.state.checked}>{this.props.id}</StyledSeat>\r\n            </CheckboxContainer>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Seat;","import React from 'react';\r\nimport Seat from './Seat';\r\nimport { StyledRow } from './Styled'\r\n\r\nconst Row = (props) => {\r\n    let row = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        row.push(\r\n            <Seat \r\n                id={i+1} \r\n                key={`seat${i+1}`}\r\n                rowName={props.rowName}\r\n                taken={props.taken}>\r\n            </Seat>);\r\n    }\r\nreturn <StyledRow rowName={props.rowName}>{row}</StyledRow>\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from './Row';\r\nimport { StyledRoom } from './Styled';\r\n\r\nconst Room = (props) => {\r\n    let room = [];\r\n    let rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\r\n    for (let i = 0; i < 8; i++) {\r\n        room.push(<Row \r\n            key={`row${i}`}\r\n            rowName={rows[i]}\r\n            taken={props.taken}/>)\r\n    };\r\n    return (\r\n        <StyledRoom>{room}</StyledRoom>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { StyledForm, StyledFormContainer, StyledInput, StyledError, StyledButton, StyledResInfo } from './Styled'\r\n\r\nconst validate = formValues => {\r\n    const { username, email } = formValues;\r\n    const errors = {};\r\n    if (!username) {\r\n        errors.username = 'Your name is required'\r\n    } else if (username.length > 15) {\r\n        errors.username = 'The name can have max 15 characters'\r\n    }\r\n    if (!email) {\r\n        errors.email = 'Your email is required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst renderField = ({\r\n    input,\r\n    type,\r\n    label,\r\n    meta: { touched, error }\r\n    }) => (\r\n    <div>\r\n        <StyledInput {...input} placeholder={label} type={type} autoComplete=\"off\" />\r\n        {touched && error && <StyledError>{error}</StyledError>}\r\n    </div>\r\n)\r\n\r\nconst ReservationForm = props => {\r\n    const { handleSubmit, pristine, submitting } = props\r\n    const onSubmit = formValues => console.log(`You made a reservation of seats: . It's been registered under the name of ${formValues.username} and a confirmation email was sent to an address: ${formValues.email}`)\r\n    return (\r\n        <StyledFormContainer>\r\n            <h2>Reservation form</h2>\r\n            <StyledResInfo>To make a reservation, please put here your name and email address so we can send you a confirmation message with all further details</StyledResInfo>\r\n            <StyledForm onSubmit={handleSubmit(onSubmit)}>\r\n                <Field\r\n                name=\"username\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"username\"\r\n                />\r\n                <Field \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    component={renderField} \r\n                    label=\"email\" />\r\n                <div>\r\n                <StyledButton type=\"submit\" disabled={pristine || submitting}>\r\n                    Submit\r\n                </StyledButton>\r\n                </div>\r\n            </StyledForm>\r\n      </StyledFormContainer>\r\n    )\r\n  }\r\n\r\nexport default reduxForm ({\r\n    form: 'reservationForm',\r\n    validate\r\n})(ReservationForm);","import React, { Component } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { StyledScreen } from './Styled';\r\nimport Room from './Room'\r\nimport ReservationFrom from './ReservationForm';\r\n\r\nclass SeanceRoom extends Component {\r\n    // const {id} = useParams();\r\n    // console.log(id);\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {taken: '1A'}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Choose your seats for the movie</h1>\r\n                <StyledScreen>screen</StyledScreen>\r\n                <Room taken={this.state.taken}/>\r\n                <ReservationFrom />\r\n            </div>\r\n        ) \r\n    }\r\n};\r\n\r\nexport default SeanceRoom;","import React from 'react';\r\nimport { HashRouter, Route, Switch} from 'react-router-dom';\r\nimport FilmsNowInTheatres from './FilmsNowInTheatres';\r\nimport Film from './Film';\r\nimport SeanceRoom from './SeanceRoom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst App = () => {\r\n    const currentFilms = useSelector(state => state.currentFilms);\r\n\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={FilmsNowInTheatres} />\r\n                        <Route path=\"/film\" exact component={Film} />\r\n                        {/* <Route path=\"/seats/:id\" exact component={SeanceRoom} /> */}\r\n                        {currentFilms.map((film, i) => {\r\n                            let path = `/seats/${film.id}/:hour`;\r\n                            return <Route key={i} path={path} exact component={SeanceRoom} />\r\n                        })}\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const currentFilmsReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_CURRENT_FILMS_SUCCESS':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentFilmsReducer\r\n","const bookedFilmReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'FILM_TO_BOOK_CHOSEN':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bookedFilmReducer;\r\n","const bookingTimeReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'TIME_OF_BOOKING_CHOSEN':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bookingTimeReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport currentFilmsReducer from './currentFilms';\r\nimport bookedFilm from './bookedFilm';\r\nimport bookingTime from './bookingTime';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    currentFilms: currentFilmsReducer,\r\n    bookedFilm,\r\n    bookingTime\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';  \r\nimport { createStore, applyMiddleware, compose } from 'redux'; \r\nimport thunk from 'redux-thunk'; \r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport './index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}